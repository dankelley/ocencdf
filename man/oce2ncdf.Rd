% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ocencdf.R
\name{oce2ncdf}
\alias{oce2ncdf}
\title{Save an oce-class object as a netcdf file.}
\usage{
oce2ncdf(x, varTable, ncfile = "output.nc", debug = 0)
}
\arguments{
\item{x}{an oce-class object.}

\item{varTable}{character value indicating the variable-naming
scheme to be used.  Two forms are handled.  (1) If \code{varTable}
ends in \code{".yml"}, then \code{varTable} must be the name of a YAML
file describing the variables.  The format must be as in
the built-in file accessed with
\verb{system.file("extdata","argo.yml",package="ocencdf"))}
On the other hand, (2) if \code{varTable} equals \code{"argo"}, then
it is replaced with a reference to the above-indicated
file.  In both cases, the contents are scanned with
\code{\link[yaml:yaml.load]{yaml::yaml.load_file()}}.  If \code{varTable} is not supplied,
then a guess will be made by the function that \code{\link[=oce2ncdf]{oce2ncdf()}}
calls to do the work, e.g. for a \code{ctd} object, the default
is \code{"argo"}.}

\item{ncfile}{character value naming the output file.}

\item{debug}{integer, 0 for quiet action, 1 or more to see processing information.}
}
\description{
\code{oce2ncdf()} works by determining the class of its first argument,
and then dispatching to an internal function, as appropriate.
}
\examples{
\dontrun{
library(ocencdf)
library(oce)
data(ctd, package="oce")
oce2ncdf(ctd, ncfile="ctd.nc")
}

}
\author{
Dan Kelley
}
